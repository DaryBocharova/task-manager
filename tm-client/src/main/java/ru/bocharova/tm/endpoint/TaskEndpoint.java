
package ru.bocharova.tm.endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-07-24T15:29:41.687+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://endpoint.api.tm.bocharova.ru/", name = "TaskEndpoint")
@XmlSeeAlso({ObjectFactory.class})
public interface TaskEndpoint {

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/editTaskRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/editTaskResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/editTask/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/editTask/Fault/DataValidateException")})
    @RequestWrapper(localName = "editTask", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.EditTask")
    @ResponseWrapper(localName = "editTaskResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.EditTaskResponse")
    public void editTask(
            @WebParam(name = "task", targetNamespace = "")
                 TaskDTO task,
            @WebParam(name = "session", targetNamespace = "")
                  SessionDTO session
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByUserIdRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByUserIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByUserId/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByUserId/Fault/DataValidateException")})
    @RequestWrapper(localName = "findAllTaskByUserId", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindAllTaskByUserId")
    @ResponseWrapper(localName = "findAllTaskByUserIdResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindAllTaskByUserIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<TaskDTO> findAllTaskByUserId(
            @WebParam(name = "session", targetNamespace = "")
                SessionDTO session
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeTaskRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeTaskResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeTask/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeTask/Fault/DataValidateException")})
    @RequestWrapper(localName = "removeTask", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.RemoveTask")
    @ResponseWrapper(localName = "removeTaskResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.RemoveTaskResponse")
    public void removeTask(
            @WebParam(name = "session", targetNamespace = "")
                    SessionDTO session,
            @WebParam(name = "id", targetNamespace = "")
                    String id
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findOneTaskRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findOneTaskResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findOneTask/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findOneTask/Fault/DataValidateException")})
    @RequestWrapper(localName = "findOneTask", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindOneTask")
    @ResponseWrapper(localName = "findOneTaskResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindOneTaskResponse")
    @WebResult(name = "return", targetNamespace = "")
    public TaskDTO findOneTask(
            @WebParam(name = "session", targetNamespace = "")
                 SessionDTO session,
            @WebParam(name = "id", targetNamespace = "")
                    String id
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByProjectIdRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByProjectIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByProjectId/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByProjectId/Fault/DataValidateException")})
    @RequestWrapper(localName = "findAllTaskByProjectId", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindAllTaskByProjectId")
    @ResponseWrapper(localName = "findAllTaskByProjectIdResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindAllTaskByProjectIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<TaskDTO> findAllTaskByProjectId(
            @WebParam(name = "session", targetNamespace = "")
                   SessionDTO session,
            @WebParam(name = "id", targetNamespace = "")
                    String id
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/sortAllTaskByUserIdRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/sortAllTaskByUserIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/sortAllTaskByUserId/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/sortAllTaskByUserId/Fault/DataValidateException")})
    @RequestWrapper(localName = "sortAllTaskByUserId", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.SortAllTaskByUserId")
    @ResponseWrapper(localName = "sortAllTaskByUserIdResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.SortAllTaskByUserIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<TaskDTO> sortAllTaskByUserId(
            @WebParam(name = "session", targetNamespace = "")
                   SessionDTO session,
            @WebParam(name = "parameter", targetNamespace = "")
                    String parameter
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByProjectIdRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByProjectIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByProjectId/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByProjectId/Fault/DataValidateException")})
    @RequestWrapper(localName = "removeAllTaskByProjectId", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.RemoveAllTaskByProjectId")
    @ResponseWrapper(localName = "removeAllTaskByProjectIdResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.RemoveAllTaskByProjectIdResponse")
    public void removeAllTaskByProjectId(
            @WebParam(name = "session", targetNamespace = "")
                 SessionDTO session,
            @WebParam(name = "id", targetNamespace = "")
                    String id
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByPartOfNameOrDescriptionRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByPartOfNameOrDescriptionResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByPartOfNameOrDescription/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/findAllTaskByPartOfNameOrDescription/Fault/DataValidateException")})
    @RequestWrapper(localName = "findAllTaskByPartOfNameOrDescription", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindAllTaskByPartOfNameOrDescription")
    @ResponseWrapper(localName = "findAllTaskByPartOfNameOrDescriptionResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.FindAllTaskByPartOfNameOrDescriptionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<TaskDTO> findAllTaskByPartOfNameOrDescription(
            @WebParam(name = "session", targetNamespace = "")
                SessionDTO session,
            @WebParam(name = "name", targetNamespace = "")
                    String name,
            @WebParam(name = "description", targetNamespace = "")
                    String description
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByUserIdRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByUserIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByUserId/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/removeAllTaskByUserId/Fault/DataValidateException")})
    @RequestWrapper(localName = "removeAllTaskByUserId", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.RemoveAllTaskByUserId")
    @ResponseWrapper(localName = "removeAllTaskByUserIdResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.RemoveAllTaskByUserIdResponse")
    public void removeAllTaskByUserId(
            @WebParam(name = "session", targetNamespace = "")
                    SessionDTO session
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/createTaskRequest", output = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/createTaskResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/createTask/Fault/AuthenticationSecurityException"), @FaultAction(className = DataValidateException_Exception.class, value = "http://endpoint.api.tm.bocharova.ru/TaskEndpoint/createTask/Fault/DataValidateException")})
    @RequestWrapper(localName = "createTask", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.CreateTask")
    @ResponseWrapper(localName = "createTaskResponse", targetNamespace = "http://endpoint.api.tm.bocharova.ru/", className = "ru.bocharova.tm.api.endpoint.CreateTaskResponse")
    public void createTask(
            @WebParam(name = "task", targetNamespace = "")
                    TaskDTO task,
            @WebParam(name = "session", targetNamespace = "")
                   SessionDTO session
    ) throws AuthenticationSecurityException_Exception, DataValidateException_Exception;
}
